// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum UserEntityRole {
  ADMINISTRATOR
  PROFESSOR
  STUDENT
}

model UserEntity {
  id        Int              @id @default(autoincrement())
  email     String           @unique
  password  String
  role      UserEntityRole
  student   StudentEntity?
  professor ProfessorEntity?
  avatar    String?
}

model StudentEntity {
  id                 Int                   @id @default(autoincrement())
  name               String
  surname            String
  specializationName String
  specialization     SpecializationEntity  @relation(fields: [specializationName], references: [shortName])
  indexNumber        Int
  indexYear          Int
  fullIndex          String
  userId             Int?                  @unique
  user               UserEntity?           @relation(fields: [userId], references: [id])
  courses            CourseStudentEntity[]

  @@unique([specializationName, indexNumber, indexYear])
}

model ProfessorEntity {
  id            Int                  @id @default(autoincrement())
  name          String
  surname       String
  title         String
  userId        Int                  @unique
  user          UserEntity           @relation(fields: [userId], references: [id])
  courses       CourseEntity[]
  announcements AnnouncementEntity[]
}

model SpecializationEntity {
  id        Int             @id @default(autoincrement())
  name      String
  shortName String          @unique
  students  StudentEntity[]
  courses   CourseEntity[]
}

model CourseEntity {
  id              Int                    @id @default(autoincrement())
  title           String                 @unique
  year            Int
  espb            Int
  description     String                 @default("")
  specializations SpecializationEntity[]
  professors      ProfessorEntity[]
  announcements   AnnouncementEntity[]
  tests           TestEntity[]
  students        CourseStudentEntity[]
}

model CourseStudentEntity {
  courseId  Int
  studentId Int
  score     Int

  course  CourseEntity  @relation(fields: [courseId], references: [id])
  student StudentEntity @relation(fields: [studentId], references: [id])

  testScores TestScoreEntity[]

  @@id([courseId, studentId])
}

model AnnouncementEntity {
  id          Int             @id @default(autoincrement())
  title       String
  body        String
  courseId    Int
  professorId Int
  course      CourseEntity    @relation(fields: [courseId], references: [id])
  professor   ProfessorEntity @relation(fields: [professorId], references: [id])
  createdAt   DateTime        @default(now())
}

model TestScoreEntity {
  courseId  Int
  studentId Int
  testId    Int
  points    Float
  fileUrl   String?

  student CourseStudentEntity @relation(fields: [courseId, studentId], references: [courseId, studentId])
  test    TestEntity          @relation(fields: [testId], references: [id])

  @@id([courseId, studentId, testId])
}

model TestEntity {
  id          Int               @id @default(autoincrement())
  title       String
  description String
  maxPoints   Float
  courseId    Int
  deadlineForSubmission DateTime?
  course      CourseEntity      @relation(fields: [courseId], references: [id])
  testScores  TestScoreEntity[]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
